Boas práticas na programação:
 
1) Doumentação
/**
* Descrição do código (o que faz?)
* @author Nome do autor do código
* link https://...
*/
 
2) Código limpo:
 
- Não abusar de comentários.
-
 
3) Nomeação:
- Não usar caracteres especiais, espaço e acentos.
- Nomes de arquivos, variáveis, funções devem ser escritos com a primeira letra em caixa baixa (letra minúscula), 
iniciar com caixa alta (letras maiúscula) apenas em classes modelos.
- Definir nomes que tenham relação com o problemas a ser resolvido.
 
4) Alinhamento (identação do código)
 
5) Quanto menos código usado para o problema melhor.
 
______________________________________________________
COMANDOS DE TERMINAL
 
cls ou clear    (limpar a tela do terminal)
node -v         (exibe a versão do node)
cd pasta        (entrar na pasta)
cd ..           (voltar um nível)
dir ou ls       (listar os arquivos e diretórios)
node arquivo.js (executar um arquivo JavaScript)
seta para cimar (repete)
<tab>           (completa o comando)
_______________________________________________________
VSCode Dicas:
 
Combinação de teclas alt + shift + f        (alinhamento do código)
Mais dicas: VS Code: Produtividade Infinita (repositório)
_______________________________________________________
JavaScript
 
Características: 
- Trabalha com setenças e não com linhas de código
- ; é opcional
- Podemos usar aspas "" ou ''
- Não podemos usar aspas diferentes " ' ou '"
Dica: Usar em textos "aspas"
      Usar em bibliotecas ou caminhos 'apóstrofe'
 
_______________________________________________________
OPERADORES:
 
Observações:
- Regra de precedência
- % (não calcula porcentagem,e sim o resto da divisão)
Ex.: 10 % 3 == 1 
     10 / 3 == 3,33
 
COMPARADORES DE IGUALDADE:
- Não usar == ou !=  ()
 
OPERDADORES LÓGICOS:
Dica:
professorjosedeassis.github.io/simulador
_______________________________________________________
COMANDOS NO CÓDIGO
 
console.clear()  //limpar a tela do console
console.log()  //escrever no console
// comentários de linhas
_______________________________________________________
Estudo das variáveis:
 
- String (caracteres)
- Númericas (números)
- Booleanas (verdadeiro ou falso)
 
Observações: No JS as variáveis são dinâmicamente tipadas
 
const        (criar uma constante)
var  ou let  (criar uma variável)
ATENÇÃO!! Não usar o var
 
TIPAGEM DINÂMICA 
No JavaScript o tipo string é definido quando o contéudo da variável estiver entre "aspas"
Variáveis númericas poder ser números inteiros e não inteiros.
//observações, (vírgulaé um caracatere e não número), se necessário converter a entrada de dados de "," para "." . replace("," "," ".")
 
Na entrada de dados númericos via terminal ou formulário é necessário converter para números.
classe Number (ferramenta)
________________________________________________________
Git e Github
 
CONFIGURUANDO O Git
- Abrir o bash
git config --global user.name "amanda-nogueira"
git config --global user.emal "amanda.alves.n@hotmail.com"
git clone link_do_repositório (clonar o repositório na máquina local)
 
Observação: Digitar os comandos na raiz do repositório
git status (verifica o status do repositório local em relação ao GitHub)
git add . (adiciona todas as alterações)
git commit -m "fundamentos"
____________________________________________________________________________________________________________________
NODE - plataforma para uso do JS fora do browser(navegador)
|__ V8 interpretador JS (google chromium)
|__ bibliotecas C / C++
|__ pacotes npm (node packager manager)
 
npm ls (lista os pacotes)
npm i ou npm install (instala um pacote)
npm r nome_do_pacote (remove o pacote)
 
PACOTE == Módulo = biblioteca
Para usar um pacote é necessário fazer a importação no início do código (logo abaixo do cabeçalho de documentação)
_____________________________________________________________________________________________________________________
ALGORITMO: "receita de bolo"

 
Exemplo 1:
Objetivo: Calcular a média de 2 notas
media = (nota1 + nota 2) / 2
 
Variáveis: nota1, nota2, media
Entrada: nota1, nota2
Processamento: media = (nota1 + nota 2) / 2
Saída: media
___________________________________________________________________________________________________________
Exemplo 2:
Desenvolver um app modo console para cálculo de porcentagem:
200 ------------- 100%
x  ------------- 10%
x  * 100 = 200 * 10
x = (200 * 10) / 100
x = 20
Variáveis: x, y, valor
Entrada: x, y
Processamento: valor = (x * y) / 100
Saída: valor

__________________________________________________________________________________________________________________


Estruturas de Controle

condicionais : 

if if-else ()





Exemplo de uso da estrutura else if 
No exemplo cálculo da média, estabelecer as seguintes condições :

1 - Se o aluno tiver média menor que 2 (REPROVADO)
2 - Se a média do aluno estiver entre 2 e 5 (RECUPERAÇÃO)
3 - Se a média for igual ou superior a 5 (APROVADO)

Resumindo: 
if(condição 1){
      // condição 1 verdadeira
} else if (condição 2) {
      // condição 2 verdaderia
} else if (condição 3) {
      // condição 3 verdadeira
} else {
      // nenhuma das condições anteriores é verdadeira
}

OBS : O else não é obrigatório

Exercicío 3: 

No Brasil, o voto pode ser proibido, obrigarório ou facultativo, de acordo com os seguintes critérios: 

 - idade menor que 16 (proibido votar)
 - entre 18 e 70 (incluindo 18 e 70) ( voto obrigarório)
 - idade 16, 70 ( voto opcional)

Desenvolva um console no JS um app em função da idade para verifcar em função da idade a obirgação ou não de votar




_______________________________________________________________________________________________________________________________

Estrutura de controle condicional: switch-case.
Sintaxe:
variável (número inteiro ou letra)
switch(variável)
      case: 1
            // código se o valor da variável for igual a 1
            break
      case: 2
            // código se o valor da variavél for igual a 2
            break
      default:
            // código caso valor diferente de 1 ou 2
            break

------------------------------------------------------------------------------------------------------------------------------------------

Exercicio 4: Desenvolva no console do JS um aplicativo que faça o sorteio de um jogo de dado,
ao resultado da face do dado associar usando o switch case a imagem da face do dado correspondente 

Exemplo : 

Estruturas de controle - laços de repetições: 

- for 
- while 
- do-while

FOR - estrutura de repetições finitas(determinadas)

for (let i=1; condicação; incremento/decremento) {
      //início ; repetir enquanto condição verdadeira; i++(adiciona um número) ou i-- (subraí um número)
}

// obs: a variavél declarada dentro da estrutura deve ser um número inteiro